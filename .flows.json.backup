[{"id":"614e30cb.432cb8","type":"tab","label":"Report Main","disabled":false,"info":""},{"id":"7153aef6.c56e78","type":"tab","label":"Report to Cache1","disabled":false,"info":""},{"id":"8f6ffea1.82b41","type":"tab","label":"Report to Cache2","disabled":false,"info":""},{"id":"f04213fa.c22b48","type":"MSSQL-CN","tdsVersion":"7_4","name":"Cache1 MSSQL","server":"{{{CACHE1_DATABASE_HOST}}}","port":"{{{CACHE1_DATABASE_PORT}}}","encyption":true,"trustServerCertificate":true,"database":"{{{CACHE1_DATABASE_DB}}}","useUTC":true,"connectTimeout":"15000","requestTimeout":"15000","cancelTimeout":"5000","pool":"5","parseJSON":false,"enableArithAbort":true},{"id":"35b0806c.4ac0e8","type":"MSSQL-CN","tdsVersion":"7_4","name":"Report MSSQL","server":"{{{REPORT_DATABASE_HOST}}}","port":"{{{REPORT_DATABASE_PORT}}}","encyption":true,"trustServerCertificate":true,"database":"{{{REPORT_DATABASE_DB}}}","useUTC":false,"connectTimeout":"15000","requestTimeout":"15000","cancelTimeout":"5000","pool":"5","parseJSON":false,"enableArithAbort":true},{"id":"81898769.b5aff8","type":"nats-streaming-server","server":"gravity-report-nats","port":"4222","cluster":"external-stan"},{"id":"9610aff8.a70458","type":"redis-config","name":"redis-cluster:6379","options":"redis://redis-cluster:6379","cluster":false,"optionsType":"str"},{"id":"1765cbe4.8ddd84","type":"MSSQL-CN","tdsVersion":"7_4","name":"Kernel DB","server":"{{{KERNEL_DATABASE_HOST}}}","port":"{{{KERNEL_DATABASE_PORT}}}","encyption":true,"trustServerCertificate":true,"database":"{{{KERNEL_DATABASE_DB}}}","useUTC":true,"connectTimeout":"15000","requestTimeout":"15000","cancelTimeout":"5000","pool":"5","parseJSON":false,"enableArithAbort":true},{"id":"41a41ac2.5ea2ac","type":"MSSQL-CN","tdsVersion":"7_4","name":"Cache2 MSSQL","server":"{{{CACHE2_DATABASE_HOST}}}","port":"{{{CACHE2_DATABASE_PORT}}}","encyption":true,"trustServerCertificate":true,"database":"{{{CACHE2_DATABASE_DB}}}","useUTC":true,"connectTimeout":"15000","requestTimeout":"15000","cancelTimeout":"5000","pool":"5","parseJSON":false,"enableArithAbort":true},{"id":"a85b5725.122ae8","type":"MSSQL-CN","tdsVersion":"7_4","name":"Kernel DB","server":"{{{KERNEL_DATABASE_HOST}}}","port":"{{{KERNEL_DATABASE_PORT}}}","encyption":true,"trustServerCertificate":true,"database":"{{{KERNEL_DATABASE_DB}}}","useUTC":true,"connectTimeout":"15000","requestTimeout":"15000","cancelTimeout":"5000","pool":"5","parseJSON":false,"enableArithAbort":true},{"id":"bcc9a41.cfcb6d8","type":"nats-streaming-subscribe","z":"614e30cb.432cb8","name":"SendRecordReplyProduct","server":"81898769.b5aff8","channel":"rowData.source.SendRecordReplyProduct","clientID":"report-atomic-sendreply-0002","start":"all","start_option":"","durable":true,"durable_name":"report-atomic-sendreply-0002","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":1090,"y":2820,"wires":[["dbfded18.d28bf"]]},{"id":"dbfded18.d28bf","type":"json","z":"614e30cb.432cb8","name":"","property":"payload","action":"","pretty":false,"x":1370,"y":2820,"wires":[["3e40ecb4.1332b4","cf820bb8.18749"]]},{"id":"aa8e429d.f1038","type":"json","z":"614e30cb.432cb8","name":"","property":"payload","action":"","pretty":false,"x":1330,"y":1760,"wires":[["9fcfa38.6ea386","16d20290.dcbfdd"]]},{"id":"98aa1b1b.0fd558","type":"function","z":"614e30cb.432cb8","name":"Convert Insert SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2310,"y":1380,"wires":[["f83d16ce.f68f8","ad20e721.1a04c8"]]},{"id":"f83d16ce.f68f8","type":"debug","z":"614e30cb.432cb8","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2620,"y":1280,"wires":[]},{"id":"ad20e721.1a04c8","type":"MSSQL","z":"614e30cb.432cb8","mssqlCN":"35b0806c.4ac0e8","name":"Create SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"\nINSERT INTO [dbo].[SI_SinoPacBankMsgInfo] \n            (UID,\n             SerialNum, \n             GUID, \n             MPhoneNum, \n             MsgData, \n             Priority, \n             BookingTime, \n             DepID, \n             MsgType, \n             Memo, \n             SenderID, \n             Bu, \n             Company, \n             Channel, \n             Reference, \n             GroupID, \n             UserName, \n             SourceType, \n             ObjectID, \n             SerialNo, \n             DestNo, \n             DestName, \n             DestCategory, \n             OrderID, \n             MID, \n             SubmitTime, \n             OrderTime, \n             ExpireTime, \n             StatusFlag, \n             SubmitFlag, \n             Filler, \n             StatusTime, \n             BatchCode) \n (\n SELECT send_record.uid                                                                                                                    AS UID,\n        send_record.serial_number                                                                                                          AS SerialNum,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GUID,\n        send_record.customer_phone                                                                                                         AS MPhoneNum,\n        send_record.content                                                                                                                AS MsgData,\n        send.priority                                                                                                                      AS Priority,\n        CAST(send_record.send_time AS DATETIME)                                                                                            AS BookingTime,\n        send_record.req_department                                                                                                         AS DepID,\n        send.msg_type                                                                                                                      AS MsgType,\n        send.memo                                                                                                                          AS Memo,\n        send_record.customer_id                                                                                                            AS SenderID,\n        send_record.req_bu                                                                                                                 AS Bu,\n        send_record.req_company                                                                                                            AS Company,\n        send.req_channel                                                                                                                   AS Channel,\n        send_record.customer_reference                                                                                                     AS REFERENCE,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GroupID,\n        substring(CONVERT(VARCHAR(36), send.create_user), 1, 20)                                                                           AS UserName,\n        ''                                                                                                                                 AS SourceType,\n        send_record.req_object_id                                                                                                          AS ObjectID,\n        CONVERT(VARCHAR(36), send_record.uid)                                                                                              AS SerialNo,\n        send_record.customer_phone                                                                                                         AS DestNo,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS DestName,\n        send_record.req_department                                                                                                         AS DestCategory,\n        ''                                                                                                                                 AS OrderID,\n        ''                                                                                                                                 AS MID,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.actual_send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14) AS SubmitTime, \n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14)        AS OrderTime, \n        CAST(send_record.expire_time AS DATETIME)                                                                                          AS ExpireTime, \n        send_record.resp_code                                                                                                              AS StatusFlag,\n        ''                                                                                                                                 AS SubmitFlag,\n        ''                                                                                                                                 AS Filler,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.dr_time AS DATETIME ),20),':',''),'-',''),' ',''),1,14)         AS StatusTime, \n        send.req_batch_id                                                                                                                  AS BatchCode\n FROM   [NBPKernel].[dbo].[send_record]                                                                                                    AS send_record,\n        [NBPKernel].[dbo].[send]                                                                                                           AS send\n WHERE  send_record.uid = @uid \n AND    send_record.send_uid = send.uid)        ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.send_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"way_name","type":"VarChar(?)","valueType":"msg","value":"payload.way_name","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"serial_number","type":"Int","valueType":"msg","value":"payload.serial_number","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_time","type":"DateTime2","valueType":"msg","value":"payload.send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"expire_time","type":"DateTime2","valueType":"msg","value":"payload.expire_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_id","type":"VarChar(?)","valueType":"msg","value":"payload.customer_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_phone","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_reference","type":"NVarChar(?)","valueType":"msg","value":"payload.customer_reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_group_id","type":"VarChar(?)","valueType":"msg","value":"payload.req_group_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_uid","type":"VarChar(?)","valueType":"msg","value":"payload.req_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"content","type":"NVarChar(?)","valueType":"msg","value":"payload.content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"return_code","type":"VarChar(?)","valueType":"msg","value":"payload.return_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"calc_section","type":"TinyInt","valueType":"msg","value":"payload.calc_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sending_section","type":"TinyInt","valueType":"msg","value":"payload.sending_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section","type":"TinyInt","valueType":"msg","value":"payload.section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"success_section","type":"TinyInt","valueType":"msg","value":"payload.success_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"failure_section","type":"TinyInt","valueType":"msg","value":"payload.failure_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section_status_list","type":"VarChar(?)","valueType":"msg","value":"payload.section_status_list","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_long","type":"TinyInt","valueType":"msg","value":"payload.is_long","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_international","type":"TinyInt","valueType":"msg","value":"payload.is_international","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"msg_id","type":"VarChar(?)","valueType":"msg","value":"payload.msg_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_time","type":"DateTime2","valueType":"msg","value":"payload.actual_send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_phone","type":"VarChar(?)","valueType":"msg","value":"payload.actual_send_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gateway_id","type":"Int","valueType":"msg","value":"payload.gateway_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"Int","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"origin_resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.origin_resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gwrecvat","type":"VarChar(?)","valueType":"msg","value":"payload.gwrecvat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"acceptat","type":"VarChar(?)","valueType":"msg","value":"payload.acceptat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sendat","type":"VarChar(?)","valueType":"msg","value":"payload.sendat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"finish_time","type":"DateTime2","valueType":"msg","value":"payload.finish_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"meta","type":"NVarChar(?)","valueType":"msg","value":"payload.meta","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"deliver_time","type":"DateTime2","valueType":"msg","value":"payload.deliver_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"canceled_time","type":"DateTime2","valueType":"msg","value":"payload.canceled_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"dr_time","type":"DateTime2","valueType":"msg","value":"payload.dr_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_expired_time","type":"DateTime2","valueType":"msg","value":"payload.update_expired_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2630,"y":1380,"wires":[["47826df8.0310cc"]]},{"id":"4345fb3b.e1de0c","type":"debug","z":"614e30cb.432cb8","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3470,"y":1180,"wires":[]},{"id":"81c6eb29.d8f45","type":"switch","z":"614e30cb.432cb8","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3220,"y":1240,"wires":[["4345fb3b.e1de0c","a5c218ee.2b7ac"],[]]},{"id":"a5c218ee.2b7ac","type":"nats-streaming-acknowledge","z":"614e30cb.432cb8","name":"STAN ACK","x":3450,"y":1240,"wires":[]},{"id":"47826df8.0310cc","type":"function","z":"614e30cb.432cb8","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2960,"y":1240,"wires":[["81c6eb29.d8f45","328c9d3b.d29eb2"]]},{"id":"852d51b5.9915f","type":"function","z":"614e30cb.432cb8","name":"Convert Update SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2350,"y":1760,"wires":[["1e422608.78c75a","7ad20f31.a6755"]]},{"id":"1e422608.78c75a","type":"debug","z":"614e30cb.432cb8","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2660,"y":1660,"wires":[]},{"id":"7ad20f31.a6755","type":"MSSQL","z":"614e30cb.432cb8","mssqlCN":"35b0806c.4ac0e8","name":"Update Report SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"DECLARE @SerialNum int \nDECLARE @GUID char(36) \nDECLARE @MPhoneNum varchar(25) \nDECLARE @MsgData nvarchar(max) \nDECLARE @Priority tinyint \nDECLARE @BookingTime datetime \nDECLARE @ExpireTime datetime \nDECLARE @DepID varchar(8) \nDECLARE @MsgType varchar(5) \nDECLARE @Memo nvarchar(40) \nDECLARE @SenderID varchar(15) \nDECLARE @GroupID varchar(36) \nDECLARE @Bu char(6) \nDECLARE @Company char(6) \nDECLARE @Channel char(16) \nDECLARE @Reference char(64) \nDECLARE @UserName varchar(20) \nDECLARE @SourceType char(1) \nDECLARE @ObjectID varchar(36) \nDECLARE @SerialNo varchar(36) \nDECLARE @DestNo varchar(20) \nDECLARE @DestName varchar(36) \nDECLARE @DestCategory char(8) \nDECLARE @DelegateTime char(14) \nDECLARE @SubmitTime char(14) \nDECLARE @OrderID varchar(20) \nDECLARE @MID varchar(5) \nDECLARE @OrderTime char(14) \nDECLARE @StatusFlag char(1) \nDECLARE @SubmitFlag varchar(3) \nDECLARE @StatusTime char(14) \nDECLARE @BatchCode varchar(64)\nDECLARE @Filler varchar(5)\n\nSELECT @SerialNum = send_record.serial_number, \n       @GUID = convert(varchar(36), send_record.req_uid), \n       @MPhoneNum = send_record.customer_phone, \n       @MsgData = send_record.content, \n       @Priority = send.priority, \n       @BookingTime = send_record.send_time, \n       @DepID = send_record.req_department, \n       @MsgType = send.msg_type, \n       @Memo = send.memo, \n       @SenderID = send_record.customer_id, \n       @Bu = send_record.req_bu, \n       @Company = send_record.req_company, \n       @Channel = send.req_channel, \n       @Reference = send_record.customer_reference, \n       @GroupID = convert(varchar(36), send_record.req_uid), \n       @UserName = Substring(convert(varchar(36), send.create_user), 1, 20), \n       @SourceType = '', \n       @ObjectID = send_record.req_object_id, \n       @SerialNo = convert(varchar(36), send_record.uid), \n       @DestNo = send_record.customer_phone, \n       @DestName = convert(varchar(36), send_record.req_uid), \n       @DestCategory = send_record.req_department, \n       @OrderID = '', \n       @MID = '', \n       @SubmitTime = substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,cast(send_record.actual_send_time as datetime),20),':',''),'-',''),' ',''),1,14), \n       @OrderTime = substring(replace(replace(replace(convert(varchar,cast(send_record.send_time as datetime),20),':',''),'-',''),' ',''),1,14), \n       @ExpireTime = cast(send_record.expire_time as datetime),\n       @StatusFlag = send_record.resp_code, \n       @SubmitFlag = '', \n       @Filler = '', \n       @StatusTime = substring(replace(replace(replace(convert(varchar,cast(send_record.dr_time as datetime),20),':',''),'-',''),' ',''),1,14),\n       @BatchCode = send.req_batch_id\nFROM   [NBPKernel].[dbo].[send_record] as send_record, \n       [NBPKernel].[dbo].[send] as send \nWHERE  send_record.uid = @uid \n       AND send_record.send_uid = send.uid \n\n\nUPDATE [dbo].[SI_SinoPacBankMsgInfo]\nSET     SerialNum = @SerialNum,\n        MPhoneNum=@MPhoneNum ,\n        MsgData=@MsgData ,\n        Priority=@Priority,\n        BookingTime=@BookingTime ,\n        DepID=@DepID ,\n        MsgType=@MsgType,\n        Memo=@Memo ,\n        SenderID=@SenderID ,\n        Bu=@Bu ,\n        Company=@Company ,\n        Channel=@Channel ,\n        Reference=@Reference ,\n        GroupID=@GroupID ,\n        UserName=@UserName ,\n        SourceType=@SourceType ,\n        ObjectID=@ObjectID ,\n        SerialNo=@SerialNo,\n        DestNo=@DestNo ,\n        DestCategory=@DestCategory,\n        OrderID=@OrderID ,\n        MID=@MID ,\n        SubmitTime=@SubmitTime,\n        OrderTime=@OrderTime,\n        ExpireTime=@ExpireTime ,\n        StatusFlag=@StatusFlag ,\n        SubmitFlag=@SubmitFlag,\n        Filler=@Filler ,\n        StatusTime=@StatusTime,\n        BatchCode=@BatchCode\nWHERE UID=@uid\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2700,"y":1760,"wires":[["1972d701.daf521"]]},{"id":"c1e66a77.3f8168","type":"debug","z":"614e30cb.432cb8","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3530,"y":1700,"wires":[]},{"id":"715b5314.3ea0dc","type":"switch","z":"614e30cb.432cb8","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3280,"y":1760,"wires":[["c1e66a77.3f8168","15f4299d.b8ba26"],[]]},{"id":"15f4299d.b8ba26","type":"nats-streaming-acknowledge","z":"614e30cb.432cb8","name":"STAN ACK","x":3510,"y":1760,"wires":[]},{"id":"1972d701.daf521","type":"function","z":"614e30cb.432cb8","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DB send_record for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DB send_record table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3020,"y":1760,"wires":[["715b5314.3ea0dc","83c66b29.0a16e8"]]},{"id":"532b32e9.9580fc","type":"function","z":"614e30cb.432cb8","name":"Convert Delete SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2410,"y":2100,"wires":[["646846bd.2ca668","8c91c3ba.73352"]]},{"id":"646846bd.2ca668","type":"debug","z":"614e30cb.432cb8","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2700,"y":2020,"wires":[]},{"id":"8c91c3ba.73352","type":"MSSQL","z":"614e30cb.432cb8","mssqlCN":"35b0806c.4ac0e8","name":"Delete SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[SI_SinoPacBankMsgInfo] where uid=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2710,"y":2100,"wires":[["ca0e23b5.2d5f28"]]},{"id":"8e62c300.9a1158","type":"debug","z":"614e30cb.432cb8","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3610,"y":2040,"wires":[]},{"id":"e795564d.fc276","type":"switch","z":"614e30cb.432cb8","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3360,"y":2100,"wires":[["8e62c300.9a1158","d9a37883.06b01"],[]]},{"id":"d9a37883.06b01","type":"nats-streaming-acknowledge","z":"614e30cb.432cb8","name":"STAN ACK","x":3590,"y":2100,"wires":[]},{"id":"ca0e23b5.2d5f28","type":"function","z":"614e30cb.432cb8","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3100,"y":2100,"wires":[["e795564d.fc276","99a9fd61.ff5958"]]},{"id":"c0f68c1f.25b97","type":"function","z":"614e30cb.432cb8","name":"Convert Insert SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2140,"y":2620,"wires":[["d109a66c.74fde","14c2eac8.2b2f3d"]]},{"id":"d109a66c.74fde","type":"debug","z":"614e30cb.432cb8","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2460,"y":2520,"wires":[]},{"id":"21a78d47.f54e62","type":"debug","z":"614e30cb.432cb8","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3350,"y":2560,"wires":[]},{"id":"1a947b66.86a1dd","type":"switch","z":"614e30cb.432cb8","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3100,"y":2620,"wires":[["21a78d47.f54e62","90a58f6c.e06428"],[]]},{"id":"5693d121.d49778","type":"debug","z":"614e30cb.432cb8","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":2820,"y":2520,"wires":[]},{"id":"90a58f6c.e06428","type":"nats-streaming-acknowledge","z":"614e30cb.432cb8","name":"STAN ACK","x":3330,"y":2620,"wires":[]},{"id":"bc5b5a26.baa2a8","type":"function","z":"614e30cb.432cb8","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"Insert ReportMsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"Insert Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2840,"y":2620,"wires":[["1a947b66.86a1dd","5a20ba03.9eb7f4"]]},{"id":"62dcb9c7.4184c","type":"function","z":"614e30cb.432cb8","name":"Convert Update SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2150,"y":2820,"wires":[["613b371b.97b3e8","ae7eaad1.f0639"]]},{"id":"613b371b.97b3e8","type":"debug","z":"614e30cb.432cb8","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2460,"y":2720,"wires":[]},{"id":"155121fe.32d1be","type":"debug","z":"614e30cb.432cb8","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3310,"y":2760,"wires":[]},{"id":"1997bde7.919cf2","type":"switch","z":"614e30cb.432cb8","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3060,"y":2820,"wires":[["155121fe.32d1be","ff4fa2ba.070c7"],[]]},{"id":"f1d786d8.c62038","type":"debug","z":"614e30cb.432cb8","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":2800,"y":2720,"wires":[]},{"id":"ff4fa2ba.070c7","type":"nats-streaming-acknowledge","z":"614e30cb.432cb8","name":"STAN ACK","x":3290,"y":2820,"wires":[]},{"id":"6f826901.094fc8","type":"function","z":"614e30cb.432cb8","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Update ReportMsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Update Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2800,"y":2820,"wires":[["1997bde7.919cf2","6f52058e.bb9b9c"]]},{"id":"13c8547.f254f2c","type":"function","z":"614e30cb.432cb8","name":"Convert Delete SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2150,"y":3020,"wires":[["1253d1db.705c76","cf74f1a0.683a18"]]},{"id":"1253d1db.705c76","type":"debug","z":"614e30cb.432cb8","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2460,"y":2920,"wires":[]},{"id":"82e00b66.8f0c98","type":"debug","z":"614e30cb.432cb8","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3350,"y":2960,"wires":[]},{"id":"61bfcf05.7c45c","type":"switch","z":"614e30cb.432cb8","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3100,"y":3020,"wires":[["82e00b66.8f0c98","a9bfa7b.9d74158"],[]]},{"id":"d8c51751.a5f1f","type":"debug","z":"614e30cb.432cb8","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":2780,"y":2920,"wires":[]},{"id":"a9bfa7b.9d74158","type":"nats-streaming-acknowledge","z":"614e30cb.432cb8","name":"STAN ACK","x":3330,"y":3020,"wires":[]},{"id":"79b13e56.d69278","type":"function","z":"614e30cb.432cb8","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Delete ReportMsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Delete Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2800,"y":3040,"wires":[["61bfcf05.7c45c","c0981de9.92ef88"]]},{"id":"328c9d3b.d29eb2","type":"redis-out","z":"614e30cb.432cb8","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3240,"y":1160,"wires":[]},{"id":"83c66b29.0a16e8","type":"redis-out","z":"614e30cb.432cb8","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3300,"y":1680,"wires":[]},{"id":"99a9fd61.ff5958","type":"redis-out","z":"614e30cb.432cb8","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3360,"y":2040,"wires":[]},{"id":"5a20ba03.9eb7f4","type":"redis-out","z":"614e30cb.432cb8","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3100,"y":2520,"wires":[]},{"id":"6f52058e.bb9b9c","type":"redis-out","z":"614e30cb.432cb8","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3080,"y":2760,"wires":[]},{"id":"c0981de9.92ef88","type":"redis-out","z":"614e30cb.432cb8","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3060,"y":2920,"wires":[]},{"id":"9fcfa38.6ea386","type":"switch","z":"614e30cb.432cb8","name":"Check Payload Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordProductCreate","vt":"str"},{"t":"eq","v":"SendRecordProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":1700,"y":1760,"wires":[["98aa1b1b.0fd558"],["98aa1b1b.0fd558"],["852d51b5.9915f"],["532b32e9.9580fc"],["98aa1b1b.0fd558"],["c325d9a1.96e14"]]},{"id":"3e40ecb4.1332b4","type":"switch","z":"614e30cb.432cb8","name":"Check Created Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordReplyProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordReplyProductCreate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":1620,"y":2820,"wires":[["c0f68c1f.25b97"],["c0f68c1f.25b97"],["62dcb9c7.4184c"],["13c8547.f254f2c"],["c0f68c1f.25b97"],["c30dc41f.33161"]]},{"id":"16d20290.dcbfdd","type":"debug","z":"614e30cb.432cb8","name":"Display Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1500,"y":1640,"wires":[]},{"id":"ece9083e.5be3d8","type":"nats-streaming-subscribe","z":"614e30cb.432cb8","name":"Send Record Product","server":"81898769.b5aff8","channel":"rowData.source.SendRecordProduct","clientID":"report-atomic-sendrecord-0001","start":"all","start_option":"","durable":true,"durable_name":"report-atomic-sendrecord-0001","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":1000,"y":1760,"wires":[["aa8e429d.f1038"]]},{"id":"cf74f1a0.683a18","type":"MSSQL","z":"614e30cb.432cb8","mssqlCN":"35b0806c.4ac0e8","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[MsgMo] where UID=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2460,"y":3040,"wires":[["79b13e56.d69278"]]},{"id":"c325d9a1.96e14","type":"nats-streaming-acknowledge","z":"614e30cb.432cb8","name":"STAN ACK","x":2070,"y":1900,"wires":[]},{"id":"c30dc41f.33161","type":"nats-streaming-acknowledge","z":"614e30cb.432cb8","name":"","x":1980,"y":2940,"wires":[]},{"id":"cf820bb8.18749","type":"debug","z":"614e30cb.432cb8","name":"Display Payload","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1520,"y":2640,"wires":[]},{"id":"9fc8d52f.ce829","type":"comment","z":"614e30cb.432cb8","name":"SI_SinoPacBankMsgInfo","info":"","x":1030,"y":1820,"wires":[]},{"id":"96b7abff.48ec1","type":"comment","z":"614e30cb.432cb8","name":"MsgMo","info":"","x":1090,"y":2860,"wires":[]},{"id":"ae7eaad1.f0639","type":"MSSQL","z":"614e30cb.432cb8","mssqlCN":"35b0806c.4ac0e8","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[MsgMo] \nSET    SerialNo = @uid, \n       ReceiveTime = Replace(Replace(Replace(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120), ':', ''), '-', ''), ' ', ''), \n       MID = @MID, \n       DestNo = @DestNo,\n       MsgData = @MsgData \nWHERE  UID = @uid ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"DateTime","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"VarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2460,"y":2820,"wires":[["6f826901.094fc8"]]},{"id":"14c2eac8.2b2f3d","type":"MSSQL","z":"614e30cb.432cb8","mssqlCN":"35b0806c.4ac0e8","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[MsgMo] \n            (UID, \n             SerialNo, \n             ReceiveTime, \n             MID, \n             DestNo, \n             MsgData) \nvalues     (@UID, \n            @SerialNo, \n            REPLACE(REPLACE(REPLACE(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120),':',''),'-',''),' ',''), \n            @MID, \n            @DestNo, \n            @MsgData) ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2440,"y":2620,"wires":[["bc5b5a26.baa2a8"]]},{"id":"69d00808.54fe18","type":"comment","z":"614e30cb.432cb8","name":"","info":"Original:\n\nKernel DB\n\n1. send\n2. send_record\n3. send_record_reply\n\nDestination:\n\nReport DB\n\n1. SI_SinoPacBankMsgInfo Table\n","x":950,"y":1460,"wires":[]},{"id":"88b5c79.52d50b8","type":"nats-streaming-subscribe","z":"7153aef6.c56e78","name":"SendRecordReplyProduct","server":"81898769.b5aff8","channel":"rowData.source.SendRecordReplyProduct","clientID":"cache1-0002","start":"all","start_option":"","durable":true,"durable_name":"cache1-0002","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":1590,"y":1680,"wires":[["4a42c7bd.f624c"]]},{"id":"4a42c7bd.f624c","type":"json","z":"7153aef6.c56e78","name":"","property":"payload","action":"","pretty":false,"x":1870,"y":1680,"wires":[["b11a48f0.24b6f","522a06d9.8a652"]]},{"id":"30a7b3af.fd7234","type":"json","z":"7153aef6.c56e78","name":"","property":"payload","action":"","pretty":false,"x":1830,"y":620,"wires":[["390d673e.2c3c58","16c7205a.91385"]]},{"id":"46bb0f2.49505f","type":"function","z":"7153aef6.c56e78","name":"Convert Insert SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2810,"y":240,"wires":[["abbe22ce.ec64","f376cb9a.6b0ab"]]},{"id":"abbe22ce.ec64","type":"debug","z":"7153aef6.c56e78","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":3120,"y":140,"wires":[]},{"id":"2fed71c2.658376","type":"debug","z":"7153aef6.c56e78","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":4090,"y":40,"wires":[]},{"id":"eb3dac62.f67cb8","type":"switch","z":"7153aef6.c56e78","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3840,"y":100,"wires":[["2fed71c2.658376","a5732035.41cf2"],[]]},{"id":"a5732035.41cf2","type":"nats-streaming-acknowledge","z":"7153aef6.c56e78","name":"STAN ACK","x":4070,"y":100,"wires":[]},{"id":"f1277c.6f8a2888","type":"function","z":"7153aef6.c56e78","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_table_uid\n\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3580,"y":100,"wires":[["eb3dac62.f67cb8","494c4549.815b94"]]},{"id":"40b0a520.e42684","type":"function","z":"7153aef6.c56e78","name":"Convert Update SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2850,"y":620,"wires":[["476676a2.0c63c","a4068708.e3687"]]},{"id":"476676a2.0c63c","type":"debug","z":"7153aef6.c56e78","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":3160,"y":520,"wires":[]},{"id":"ce5bca28.296bd","type":"debug","z":"7153aef6.c56e78","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":4230,"y":560,"wires":[]},{"id":"d766d9b5.a5891","type":"switch","z":"7153aef6.c56e78","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3980,"y":620,"wires":[["ce5bca28.296bd","1c8d8971.934d3f"],[]]},{"id":"1c8d8971.934d3f","type":"nats-streaming-acknowledge","z":"7153aef6.c56e78","name":"STAN ACK","x":4210,"y":620,"wires":[]},{"id":"a2d5bb45.5bdaf8","type":"function","z":"7153aef6.c56e78","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report MsgMO for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DBMsgMO table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3760,"y":620,"wires":[["d766d9b5.a5891","dbecc25e.a1f2d8"]]},{"id":"a4dfa036.0670e","type":"function","z":"7153aef6.c56e78","name":"Convert Delete SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\n// msg.payload.send_time = convert_datetime(msg.payload.send_time)\n// msg.payload.expire_time = convert_datetime(msg.payload.expire_time)\n// msg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\n// msg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\n// msg.payload.dr_time = convert_datetime(msg.payload.dr_time)\n// msg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\n// msg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2910,"y":960,"wires":[["dbf0eef2.5f002","c5a57a12.f1a8b8"]]},{"id":"dbf0eef2.5f002","type":"debug","z":"7153aef6.c56e78","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":3200,"y":880,"wires":[]},{"id":"c5a57a12.f1a8b8","type":"MSSQL","z":"7153aef6.c56e78","mssqlCN":"f04213fa.c22b48","name":"Delete SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[SI_SinoPacBankMsgInfo] where uid=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3210,"y":960,"wires":[["a2ee794a.8955d8"]]},{"id":"557f150c.18787c","type":"debug","z":"7153aef6.c56e78","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":4110,"y":900,"wires":[]},{"id":"853c163f.01a53","type":"switch","z":"7153aef6.c56e78","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3860,"y":960,"wires":[["557f150c.18787c","6857b7f6.e4ee6"],[]]},{"id":"6857b7f6.e4ee6","type":"nats-streaming-acknowledge","z":"7153aef6.c56e78","name":"STAN ACK","x":4090,"y":960,"wires":[]},{"id":"a2ee794a.8955d8","type":"function","z":"7153aef6.c56e78","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3600,"y":960,"wires":[["853c163f.01a53","3608f5bc.5f68b2"]]},{"id":"30671389.b8570c","type":"function","z":"7153aef6.c56e78","name":"Convert Insert SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2640,"y":1480,"wires":[["b2f88d64.e39fa8","2be0cc71.86fba4"]]},{"id":"b2f88d64.e39fa8","type":"debug","z":"7153aef6.c56e78","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2960,"y":1380,"wires":[]},{"id":"d4e575d5.d5d0f","type":"debug","z":"7153aef6.c56e78","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3850,"y":1420,"wires":[]},{"id":"4fa45607.15ef58","type":"switch","z":"7153aef6.c56e78","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3600,"y":1480,"wires":[["d4e575d5.d5d0f","64b47a95.675ddc"],[]]},{"id":"717bce50.1b818","type":"debug","z":"7153aef6.c56e78","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":3320,"y":1380,"wires":[]},{"id":"64b47a95.675ddc","type":"nats-streaming-acknowledge","z":"7153aef6.c56e78","name":"STAN ACK","x":3830,"y":1480,"wires":[]},{"id":"9b551e5b.ae4678","type":"function","z":"7153aef6.c56e78","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"Insert Report DB MsgMo for Success, UID:\" + msg.send_record_reply_uid \n} else {\n    msg.result = \"Insert Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3340,"y":1480,"wires":[["4fa45607.15ef58","7159274.37e7cd8"]]},{"id":"cd442bbc.06ec58","type":"function","z":"7153aef6.c56e78","name":"Convert Update SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2650,"y":1680,"wires":[["7c21d52.99d272c","1b7b2e45.85be7a"]]},{"id":"7c21d52.99d272c","type":"debug","z":"7153aef6.c56e78","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2960,"y":1580,"wires":[]},{"id":"22a7ac27.37f30c","type":"debug","z":"7153aef6.c56e78","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3810,"y":1620,"wires":[]},{"id":"55a088f5.cc1598","type":"switch","z":"7153aef6.c56e78","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3560,"y":1680,"wires":[["22a7ac27.37f30c","b0d86a34.52bf5"],[]]},{"id":"477dd655.1f462","type":"debug","z":"7153aef6.c56e78","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":3300,"y":1580,"wires":[]},{"id":"b0d86a34.52bf5","type":"nats-streaming-acknowledge","z":"7153aef6.c56e78","name":"STAN ACK","x":3790,"y":1680,"wires":[]},{"id":"7a077212.db7e0c","type":"function","z":"7153aef6.c56e78","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Update Report DB MsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Update Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3300,"y":1680,"wires":[["55a088f5.cc1598","f486a498.72eb18"]]},{"id":"b6611dd8.259c3","type":"function","z":"7153aef6.c56e78","name":"Convert Delete SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2650,"y":1880,"wires":[["40f46826.c2e348","fd2edd3e.630e68"]]},{"id":"40f46826.c2e348","type":"debug","z":"7153aef6.c56e78","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2960,"y":1780,"wires":[]},{"id":"9d03d69d.36f75","type":"debug","z":"7153aef6.c56e78","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3850,"y":1820,"wires":[]},{"id":"17b24260.418aae","type":"switch","z":"7153aef6.c56e78","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3600,"y":1880,"wires":[["9d03d69d.36f75","3fa2b944.5cf586"],[]]},{"id":"82142d54.1b6288","type":"debug","z":"7153aef6.c56e78","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":3280,"y":1780,"wires":[]},{"id":"3fa2b944.5cf586","type":"nats-streaming-acknowledge","z":"7153aef6.c56e78","name":"STAN ACK","x":3830,"y":1880,"wires":[]},{"id":"e760b6e6.96c22","type":"function","z":"7153aef6.c56e78","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Delete Report DB MsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Delete Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3300,"y":1900,"wires":[["17b24260.418aae","e9c82fc1.ec339"]]},{"id":"494c4549.815b94","type":"redis-out","z":"7153aef6.c56e78","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3860,"y":20,"wires":[]},{"id":"dbecc25e.a1f2d8","type":"redis-out","z":"7153aef6.c56e78","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":4000,"y":540,"wires":[]},{"id":"3608f5bc.5f68b2","type":"redis-out","z":"7153aef6.c56e78","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3860,"y":900,"wires":[]},{"id":"7159274.37e7cd8","type":"redis-out","z":"7153aef6.c56e78","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3600,"y":1380,"wires":[]},{"id":"f486a498.72eb18","type":"redis-out","z":"7153aef6.c56e78","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3580,"y":1620,"wires":[]},{"id":"e9c82fc1.ec339","type":"redis-out","z":"7153aef6.c56e78","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3560,"y":1780,"wires":[]},{"id":"390d673e.2c3c58","type":"switch","z":"7153aef6.c56e78","name":"Check Payload Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordProductCreate","vt":"str"},{"t":"eq","v":"SendRecordProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":2200,"y":620,"wires":[["46bb0f2.49505f"],["46bb0f2.49505f"],["40b0a520.e42684"],["a4dfa036.0670e"],["46bb0f2.49505f"],["b8e4d2db.13b498"]]},{"id":"b11a48f0.24b6f","type":"switch","z":"7153aef6.c56e78","name":"Check Created Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordReplyProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordReplyProductCreate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":2120,"y":1680,"wires":[["30671389.b8570c"],["30671389.b8570c"],["cd442bbc.06ec58"],["b6611dd8.259c3"],["30671389.b8570c"],["dea54225.723c3"]]},{"id":"16c7205a.91385","type":"debug","z":"7153aef6.c56e78","name":"Display Payload","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2000,"y":500,"wires":[]},{"id":"fd2edd3e.630e68","type":"MSSQL","z":"7153aef6.c56e78","mssqlCN":"f04213fa.c22b48","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[MsgMo] where UID=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2960,"y":1900,"wires":[["e760b6e6.96c22"]]},{"id":"b8e4d2db.13b498","type":"nats-streaming-acknowledge","z":"7153aef6.c56e78","name":"STAN ACK","x":2570,"y":760,"wires":[]},{"id":"dea54225.723c3","type":"nats-streaming-acknowledge","z":"7153aef6.c56e78","name":"","x":2480,"y":1800,"wires":[]},{"id":"522a06d9.8a652","type":"debug","z":"7153aef6.c56e78","name":"Display Payload","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2020,"y":1500,"wires":[]},{"id":"60d6d82a.d9212","type":"comment","z":"7153aef6.c56e78","name":"SI_SinoPacBankMsgInfo","info":"","x":1530,"y":680,"wires":[]},{"id":"79c27563.d79064","type":"comment","z":"7153aef6.c56e78","name":"MsgMo","info":"","x":1590,"y":1720,"wires":[]},{"id":"1b7b2e45.85be7a","type":"MSSQL","z":"7153aef6.c56e78","mssqlCN":"f04213fa.c22b48","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[MsgMo] \nSET    SerialNo = @uid, \n       ReceiveTime = Replace(Replace(Replace(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120), ':', ''), '-', ''), ' ', ''), \n       MID = @MID, \n       DestNo = @DestNo,\n       MsgData = @MsgData \nWHERE  UID = @uid ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"DateTime","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"VarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2960,"y":1680,"wires":[["7a077212.db7e0c"]]},{"id":"f376cb9a.6b0ab","type":"MSSQL","z":"7153aef6.c56e78","mssqlCN":"1765cbe4.8ddd84","name":"Create SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"\n SELECT send_record.uid                                                                                                                    AS UID,\n        send_record.serial_number                                                                                                          AS SerialNum,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GUID,\n        send_record.customer_phone                                                                                                         AS MPhoneNum,\n        send_record.content                                                                                                                AS MsgData,\n        send.priority                                                                                                                      AS Priority,\n        CAST(send_record.send_time AS DATETIME)                                                                                            AS BookingTime,\n        send_record.req_department                                                                                                         AS DepID,\n        send.msg_type                                                                                                                      AS MsgType,\n        send.memo                                                                                                                          AS Memo,\n        send_record.customer_id                                                                                                            AS SenderID,\n        send_record.req_bu                                                                                                                 AS Bu,\n        send_record.req_company                                                                                                            AS Company,\n        send.req_channel                                                                                                                   AS Channel,\n        send_record.customer_reference                                                                                                     AS REFERENCE,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GroupID,\n        substring(CONVERT(VARCHAR(36), send.create_user), 1, 20)                                                                           AS UserName,\n        ''                                                                                                                                 AS SourceType,\n        send_record.req_object_id                                                                                                          AS ObjectID,\n        CONVERT(VARCHAR(36), send_record.uid)                                                                                              AS SerialNo,\n        send_record.customer_phone                                                                                                         AS DestNo,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS DestName,\n        send_record.req_department                                                                                                         AS DestCategory,\n        ''                                                                                                                                 AS OrderID,\n        ''                                                                                                                                 AS MID,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.actual_send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14) AS SubmitTime, \n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14)        AS OrderTime, \n        CAST(send_record.expire_time AS DATETIME)                                                                                          AS ExpireTime, \n        send_record.resp_code                                                                                                              AS StatusFlag,\n        ''                                                                                                                                 AS SubmitFlag,\n        ''                                                                                                                                 AS Filler,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.dr_time AS DATETIME ),20),':',''),'-',''),' ',''),1,14)         AS StatusTime, \n        send.req_batch_id                                                                                                                  AS BatchCode\n FROM   [dbo].[send_record]                                                                                                    AS send_record,\n        [dbo].[send]                                                                                                           AS send\n WHERE  send_record.uid = @uid \n AND    send_record.send_uid = send.uid\n \n ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.send_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"way_name","type":"VarChar(?)","valueType":"msg","value":"payload.way_name","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"serial_number","type":"Int","valueType":"msg","value":"payload.serial_number","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_time","type":"DateTime2","valueType":"msg","value":"payload.send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"expire_time","type":"DateTime2","valueType":"msg","value":"payload.expire_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_id","type":"VarChar(?)","valueType":"msg","value":"payload.customer_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_phone","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_reference","type":"NVarChar(?)","valueType":"msg","value":"payload.customer_reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_group_id","type":"VarChar(?)","valueType":"msg","value":"payload.req_group_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_uid","type":"VarChar(?)","valueType":"msg","value":"payload.req_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"content","type":"NVarChar(?)","valueType":"msg","value":"payload.content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"return_code","type":"VarChar(?)","valueType":"msg","value":"payload.return_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"calc_section","type":"TinyInt","valueType":"msg","value":"payload.calc_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sending_section","type":"TinyInt","valueType":"msg","value":"payload.sending_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section","type":"TinyInt","valueType":"msg","value":"payload.section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"success_section","type":"TinyInt","valueType":"msg","value":"payload.success_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"failure_section","type":"TinyInt","valueType":"msg","value":"payload.failure_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section_status_list","type":"VarChar(?)","valueType":"msg","value":"payload.section_status_list","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_long","type":"TinyInt","valueType":"msg","value":"payload.is_long","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_international","type":"TinyInt","valueType":"msg","value":"payload.is_international","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"msg_id","type":"VarChar(?)","valueType":"msg","value":"payload.msg_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_time","type":"DateTime2","valueType":"msg","value":"payload.actual_send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_phone","type":"VarChar(?)","valueType":"msg","value":"payload.actual_send_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gateway_id","type":"Int","valueType":"msg","value":"payload.gateway_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"Int","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"origin_resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.origin_resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gwrecvat","type":"VarChar(?)","valueType":"msg","value":"payload.gwrecvat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"acceptat","type":"VarChar(?)","valueType":"msg","value":"payload.acceptat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sendat","type":"VarChar(?)","valueType":"msg","value":"payload.sendat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"finish_time","type":"DateTime2","valueType":"msg","value":"payload.finish_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"meta","type":"NVarChar(?)","valueType":"msg","value":"payload.meta","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"deliver_time","type":"DateTime2","valueType":"msg","value":"payload.deliver_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"canceled_time","type":"DateTime2","valueType":"msg","value":"payload.canceled_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"dr_time","type":"DateTime2","valueType":"msg","value":"payload.dr_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_expired_time","type":"DateTime2","valueType":"msg","value":"payload.update_expired_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3150,"y":200,"wires":[["51fb51e0.3fe56"]]},{"id":"f8fc53a.f8f563","type":"function","z":"7153aef6.c56e78","name":"","func":"if (msg.payload.length >= 1) {\n   msg.payload = msg.payload[0]\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3590,"y":240,"wires":[["edcc6484.1211f8","c274b266.ec94c8"]]},{"id":"edcc6484.1211f8","type":"MSSQL","z":"7153aef6.c56e78","mssqlCN":"f04213fa.c22b48","name":"Create SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[SI_SinoPacBankMsgInfo]\n    (UID,\n    SerialNum,\n    GUID,\n    MPhoneNum,\n    MsgData,\n    Priority,\n    BookingTime,\n    DepID,\n    MsgType,\n    Memo,\n    SenderID,\n    Bu,\n    Company,\n    Channel,\n    Reference,\n    GroupID,\n    UserName,\n    SourceType,\n    ObjectID,\n    SerialNo,\n    DestNo,\n    DestName,\n    DestCategory,\n    OrderID,\n    MID,\n    SubmitTime,\n    OrderTime,\n    ExpireTime,\n    StatusFlag,\n    SubmitFlag,\n    Filler,\n    StatusTime,\n    BatchCode)\nVALUES(\n        @UID,\n        @SerialNum,\n        @GUID,\n        @MPhoneNum,\n        @MsgData,\n        @Priority,\n        @BookingTime,\n        @DepID,\n        @MsgType,\n        @Memo,\n        @SenderID,\n        @Bu,\n        @Company,\n        @Channel,\n        @Reference,\n        @GroupID,\n        @UserName,\n        @SourceType,\n        @ObjectID,\n        @SerialNo,\n        @DestNo,\n        @DestName,\n        @DestCategory,\n        @OrderID,\n        @MID,\n        @SubmitTime,\n        @OrderTime,\n        @ExpireTime,\n        @StatusFlag,\n        @SubmitFlag,\n        @Filler,\n        @StatusTime,\n        @BatchCode)\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.UID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNum","type":"Int","valueType":"msg","value":"payload.SerialNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GUID","type":"VarChar(?)","valueType":"msg","value":"payload.GUID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MPhoneNum","type":"VarChar(?)","valueType":"msg","value":"payload.MPhoneNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.MsgData","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Priority","type":"TinyInt","valueType":"msg","value":"payload.Priority","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BookingTime","type":"DateTime2","valueType":"msg","value":"payload.BookingTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DepID","type":"VarChar(?)","valueType":"msg","value":"payload.DepID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgType","type":"VarChar(?)","valueType":"msg","value":"payload.MsgType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Memo","type":"VarChar(?)","valueType":"msg","value":"payload.Memo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SenderID","type":"VarChar(?)","valueType":"msg","value":"payload.SenderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Bu","type":"VarChar(?)","valueType":"msg","value":"payload.Bu","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Company","type":"VarChar(?)","valueType":"msg","value":"payload.Company","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Channel","type":"VarChar(?)","valueType":"msg","value":"payload.Channel","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Reference","type":"VarChar(?)","valueType":"msg","value":"payload.Reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GroupID","type":"VarChar(?)","valueType":"msg","value":"payload.GroupID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"UserName","type":"VarChar(?)","valueType":"msg","value":"payload.UserName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SourceType","type":"VarChar(?)","valueType":"msg","value":"payload.SourceType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ObjectID","type":"VarChar(?)","valueType":"msg","value":"payload.ObjectID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.SerialNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.DestNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestName","type":"VarChar(?)","valueType":"msg","value":"payload.DestName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestCategory","type":"VarChar(?)","valueType":"msg","value":"payload.DestCategory","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderID","type":"VarChar(?)","valueType":"msg","value":"payload.OrderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.MID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitTime","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderTime","type":"VarChar(?)","valueType":"msg","value":"payload.OrderTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ExpireTime","type":"DateTime","valueType":"msg","value":"payload.ExpireTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusFlag","type":"VarChar(?)","valueType":"msg","value":"payload.StatusFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitFlag","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Filler","type":"VarChar(?)","valueType":"msg","value":"payload.Filler","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusTime","type":"VarChar(?)","valueType":"msg","value":"payload.StatusTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BatchCode","type":"VarChar(?)","valueType":"msg","value":"payload.BatchCode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3870,"y":220,"wires":[["f1277c.6f8a2888"]]},{"id":"c274b266.ec94c8","type":"debug","z":"7153aef6.c56e78","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":3900,"y":300,"wires":[]},{"id":"2be0cc71.86fba4","type":"MSSQL","z":"7153aef6.c56e78","mssqlCN":"f04213fa.c22b48","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[MsgMo] \n           (\n             SerialNo, \n             ReceiveTime, \n             MID, \n             DestNo, \n             MsgData) \n             \nvalues     (@SerialNo, \n            REPLACE(REPLACE(REPLACE(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120),':',''),'-',''),' ',''), \n            @MID, \n            @DestNo, \n            @MsgData) ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"VarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2940,"y":1480,"wires":[["9b551e5b.ae4678"]]},{"id":"5f5d19a5.77d12","type":"MSSQL","z":"7153aef6.c56e78","mssqlCN":"f04213fa.c22b48","name":"Update SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[SI_SinoPacBankMsgInfo]\nSET     SerialNum = @SerialNum,\n        MPhoneNum=@MPhoneNum ,\n        MsgData=@MsgData ,\n        Priority=@Priority,\n        BookingTime=@BookingTime ,\n        DepID=@DepID ,\n        MsgType=@MsgType,\n        Memo=@Memo ,\n        SenderID=@SenderID ,\n        Bu=@Bu ,\n        Company=@Company ,\n        Channel=@Channel ,\n        Reference=@Reference ,\n        GroupID=@GroupID ,\n        UserName=@UserName ,\n        SourceType=@SourceType ,\n        ObjectID=@ObjectID ,\n        SerialNo=@SerialNo,\n        DestNo=@DestNo ,\n        DestCategory=@DestCategory,\n        OrderID=@OrderID ,\n        MID=@MID ,\n        SubmitTime=@SubmitTime,\n        OrderTime=@OrderTime,\n        ExpireTime=@ExpireTime ,\n        StatusFlag=@StatusFlag ,\n        SubmitFlag=@SubmitFlag,\n        Filler=@Filler ,\n        StatusTime=@StatusTime,\n        BatchCode=@BatchCode\nWHERE UID=@uid\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.UID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNum","type":"Int","valueType":"msg","value":"payload.SerialNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GUID","type":"VarChar(?)","valueType":"msg","value":"payload.GUID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MPhoneNum","type":"VarChar(?)","valueType":"msg","value":"payload.MPhoneNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.MsgData","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Priority","type":"TinyInt","valueType":"msg","value":"payload.Priority","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BookingTime","type":"DateTime2","valueType":"msg","value":"payload.BookingTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DepID","type":"VarChar(?)","valueType":"msg","value":"payload.DepID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgType","type":"VarChar(?)","valueType":"msg","value":"payload.MsgType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Memo","type":"VarChar(?)","valueType":"msg","value":"payload.Memo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SenderID","type":"VarChar(?)","valueType":"msg","value":"payload.SenderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Bu","type":"VarChar(?)","valueType":"msg","value":"payload.Bu","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Company","type":"VarChar(?)","valueType":"msg","value":"payload.Company","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Channel","type":"VarChar(?)","valueType":"msg","value":"payload.Channel","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Reference","type":"VarChar(?)","valueType":"msg","value":"payload.Reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GroupID","type":"VarChar(?)","valueType":"msg","value":"payload.GroupID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"UserName","type":"VarChar(?)","valueType":"msg","value":"payload.UserName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SourceType","type":"VarChar(?)","valueType":"msg","value":"payload.SourceType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ObjectID","type":"VarChar(?)","valueType":"msg","value":"payload.ObjectID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.SerialNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.DestNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestName","type":"VarChar(?)","valueType":"msg","value":"payload.DestName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestCategory","type":"VarChar(?)","valueType":"msg","value":"payload.DestCategory","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderID","type":"VarChar(?)","valueType":"msg","value":"payload.OrderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.MID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitTime","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderTime","type":"VarChar(?)","valueType":"msg","value":"payload.OrderTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ExpireTime","type":"DateTime","valueType":"msg","value":"payload.ExpireTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusFlag","type":"VarChar(?)","valueType":"msg","value":"payload.StatusFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitFlag","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Filler","type":"VarChar(?)","valueType":"msg","value":"payload.Filler","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusTime","type":"VarChar(?)","valueType":"msg","value":"payload.StatusTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BatchCode","type":"VarChar(?)","valueType":"msg","value":"payload.BatchCode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3940,"y":720,"wires":[["a2d5bb45.5bdaf8"]]},{"id":"f1523760.f902f","type":"function","z":"7153aef6.c56e78","name":"","func":"if (msg.payload.length >= 1) {\n   msg.payload = msg.payload[0]\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3670,"y":740,"wires":[["5f5d19a5.77d12"]]},{"id":"4054d131.34a708","type":"debug","z":"7153aef6.c56e78","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":3600,"y":520,"wires":[]},{"id":"4c1b96e1.beda78","type":"nats-streaming-subscribe","z":"7153aef6.c56e78","name":"Send Record Product","server":"81898769.b5aff8","channel":"rowData.source.SendRecordProduct","clientID":"cache1-0001","start":"all","start_option":"","durable":true,"durable_name":"cache1-0001","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":1500,"y":620,"wires":[["30a7b3af.fd7234"]]},{"id":"a4068708.e3687","type":"MSSQL","z":"7153aef6.c56e78","mssqlCN":"1765cbe4.8ddd84","name":"Update Report SI_SinoPacBankMsgInfo","outField":"payload","returnType":"0","throwErrors":"0","query":"SELECT send_record.uid as UID ,\n    send_record.serial_number as SerialNum ,\n    convert(varchar(36), send_record.req_uid) as GUID,\n    send_record.customer_phone as MPhoneNum,\n    send_record.content as MsgData ,\n    send.priority as Priority,\n    send_record.send_time as BookingTime,\n    send_record.req_department as DepID,\n    send.msg_type as MsgType,\n    send.memo as Memo,\n    send_record.customer_id as SenderID,\n    send_record.req_bu as Bu,\n    send_record.req_company as Company,\n    send.req_channel as Channel,\n    send_record.customer_reference Reference,\n    convert(varchar(36), send_record.req_uid) as GroupID,\n    Substring(convert(varchar(36), send.create_user), 1, 20) as UserName ,\n    '' as SourceType ,\n    send_record.req_object_id as ObjectID,\n    convert(varchar(36), send_record.uid) as  SerialNo ,\n    send_record.customer_phone as DestNo,\n    convert(varchar(36), send_record.req_uid) as DestName,\n    send_record.req_department as DestCategory,\n    '' as OrderID,\n    '' as MID,\n    substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,cast(send_record.actual_send_time as datetime),20),':',''),'-',''),' ',''),1,14) as SubmitTime,\n    substring(replace(replace(replace(convert(varchar,cast(send_record.send_time as datetime),20),':',''),'-',''),' ',''),1,14) as OrderTime,\n    cast(send_record.expire_time as datetime) as ExpireTime,\n    send_record.resp_code as StatusFlag,\n    '' as SubmitFlag,\n    '' as Filler,\n    substring(replace(replace(replace(convert(varchar,cast(send_record.dr_time as datetime),20),':',''),'-',''),' ',''),1,14) as StatusTime,\n    send.req_batch_id as BatchCode\nFROM [NBPKernel].[dbo].[send_record] as send_record,\n    [NBPKernel].[dbo].[send] as send\nWHERE  send_record.uid = @uid\n    AND send_record.send_uid = send.uid\n\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3220,"y":620,"wires":[["4054d131.34a708","f7ce75c2.27b458"]]},{"id":"51fb51e0.3fe56","type":"function","z":"7153aef6.c56e78","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  { \n    \n}\n\nelse {\n    msg.have_error = 1\n}\n    \n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3300,"y":340,"wires":[["19970b6c.16d305"]]},{"id":"19970b6c.16d305","type":"switch","z":"7153aef6.c56e78","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3520,"y":340,"wires":[["f8fc53a.f8f563"],[]]},{"id":"f7ce75c2.27b458","type":"function","z":"7153aef6.c56e78","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  { \n    \n}\n\nelse {\n    msg.have_error = 1\n}\n    \n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3200,"y":760,"wires":[["608988ab.de8cc"]]},{"id":"608988ab.de8cc","type":"switch","z":"7153aef6.c56e78","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3460,"y":760,"wires":[["f1523760.f902f"],[]]},{"id":"defa5ef5.94a65","type":"nats-streaming-subscribe","z":"8f6ffea1.82b41","name":"SendRecordReplyProduct","server":"81898769.b5aff8","channel":"rowData.source.SendRecordReplyProduct","clientID":"cache2-0002","start":"all","start_option":"","durable":true,"durable_name":"cache2-0002","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":1190,"y":1680,"wires":[["61d79760.20cd98"]]},{"id":"61d79760.20cd98","type":"json","z":"8f6ffea1.82b41","name":"","property":"payload","action":"","pretty":false,"x":1470,"y":1680,"wires":[["ae1ca5b2.9e7da8","858e0114.8fc828"]]},{"id":"fdde678b.ea4038","type":"json","z":"8f6ffea1.82b41","name":"","property":"payload","action":"","pretty":false,"x":1430,"y":620,"wires":[["fbd14b3f.e61928","eb967c49.da3df"]]},{"id":"4cbc7f9f.fad","type":"function","z":"8f6ffea1.82b41","name":"Convert Insert SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2410,"y":240,"wires":[["e7f62e97.7cdb58","1100c5fe.9afaa2"]]},{"id":"e7f62e97.7cdb58","type":"debug","z":"8f6ffea1.82b41","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2720,"y":140,"wires":[]},{"id":"ced31249.795db","type":"debug","z":"8f6ffea1.82b41","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3570,"y":40,"wires":[]},{"id":"93a84564.302b48","type":"switch","z":"8f6ffea1.82b41","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3320,"y":100,"wires":[["ced31249.795db","e221d77c.6a04d8"],[]]},{"id":"e221d77c.6a04d8","type":"nats-streaming-acknowledge","z":"8f6ffea1.82b41","name":"STAN ACK","x":3550,"y":100,"wires":[]},{"id":"dfb9c3.1f9f464","type":"function","z":"8f6ffea1.82b41","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_table_uid\n\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Insert Report DB SI_SinoPacBankMsgInfo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3060,"y":100,"wires":[["93a84564.302b48","b46f54ad.ceba5"]]},{"id":"c3113657.36c62","type":"function","z":"8f6ffea1.82b41","name":"Convert Update SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\nmsg.payload.send_time = convert_datetime(msg.payload.send_time)\nmsg.payload.expire_time = convert_datetime(msg.payload.expire_time)\nmsg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\nmsg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\nmsg.payload.dr_time = convert_datetime(msg.payload.dr_time)\nmsg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\nmsg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2450,"y":620,"wires":[["42f3316a.5451d","7c41acc8.22bd14"]]},{"id":"42f3316a.5451d","type":"debug","z":"8f6ffea1.82b41","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2760,"y":520,"wires":[]},{"id":"6564dc6f.e65b64","type":"debug","z":"8f6ffea1.82b41","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3630,"y":560,"wires":[]},{"id":"ce710d50.30f2d8","type":"switch","z":"8f6ffea1.82b41","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3380,"y":620,"wires":[["6564dc6f.e65b64","50613a1d.648aa4"],[]]},{"id":"50613a1d.648aa4","type":"nats-streaming-acknowledge","z":"8f6ffea1.82b41","name":"STAN ACK","x":3610,"y":620,"wires":[]},{"id":"d38711f5.22adc","type":"function","z":"8f6ffea1.82b41","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report MsgMO for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Update Report DBMsgMO table failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3160,"y":620,"wires":[["ce710d50.30f2d8","6a8afaf.60e7804"]]},{"id":"46ff3dfa.025a9c","type":"function","z":"8f6ffea1.82b41","name":"Convert Delete SendRecord Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\nmsg.payload2 = msg.payload\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\nmsg.payload.send_uid= convert_uuid(msg.payload.send_uid)\n\n// msg.payload.send_time = convert_datetime(msg.payload.send_time)\n// msg.payload.expire_time = convert_datetime(msg.payload.expire_time)\n// msg.payload.actual_send_time = convert_datetime(msg.payload.actual_send_time)\n// msg.payload.finish_time = convert_datetime(msg.payload.finish_time)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.deliver_time = convert_datetime(msg.payload.deliver_time)\n\n// msg.payload.dr_time = convert_datetime(msg.payload.dr_time)\n// msg.payload.canceled_time = convert_datetime(msg.payload.canceled_time)\n// msg.payload.update_expired_time = convert_datetime(msg.payload.update_expired_time)\n\nmsg.send_record_table_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2510,"y":960,"wires":[["7943dbe5.660b74","28615a75.081ca6"]]},{"id":"7943dbe5.660b74","type":"debug","z":"8f6ffea1.82b41","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2800,"y":880,"wires":[]},{"id":"28615a75.081ca6","type":"MSSQL","z":"8f6ffea1.82b41","mssqlCN":"f04213fa.c22b48","name":"Delete SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[SI_SinoPacBankMsgInfo] where uid=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2810,"y":960,"wires":[["150b27a4.62319"]]},{"id":"a049a663.81e0a","type":"debug","z":"8f6ffea1.82b41","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3710,"y":900,"wires":[]},{"id":"b0f136a0.6205e","type":"switch","z":"8f6ffea1.82b41","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3460,"y":960,"wires":[["a049a663.81e0a","3530264c.5c8872"],[]]},{"id":"3530264c.5c8872","type":"nats-streaming-acknowledge","z":"8f6ffea1.82b41","name":"STAN ACK","x":3690,"y":960,"wires":[]},{"id":"150b27a4.62319","type":"function","z":"8f6ffea1.82b41","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo for Success, UID:\" + msg.send_record_table_uid\n} else {\n    msg.result = \"[GRAVITY][ATOMIC] Delete Report SI_SinoPacBankMsgInfo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3200,"y":960,"wires":[["b0f136a0.6205e","14fc88c6.124157"]]},{"id":"889a1d78.73263","type":"function","z":"8f6ffea1.82b41","name":"Convert Insert SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\n\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2240,"y":1480,"wires":[["9c5d5d5e.e17a78","800cdb70.fa84d8"]]},{"id":"9c5d5d5e.e17a78","type":"debug","z":"8f6ffea1.82b41","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2560,"y":1380,"wires":[]},{"id":"d99a06ed.387568","type":"debug","z":"8f6ffea1.82b41","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3450,"y":1420,"wires":[]},{"id":"8c607501.4d3428","type":"switch","z":"8f6ffea1.82b41","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3200,"y":1480,"wires":[["d99a06ed.387568","f5584a1b.9e295"],[]]},{"id":"4bd40c18.ec897c","type":"debug","z":"8f6ffea1.82b41","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":2920,"y":1380,"wires":[]},{"id":"f5584a1b.9e295","type":"nats-streaming-acknowledge","z":"8f6ffea1.82b41","name":"STAN ACK","x":3430,"y":1480,"wires":[]},{"id":"fdf63184.31d2c","type":"function","z":"8f6ffea1.82b41","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"Insert Report DB MsgMo for Success, UID:\" + msg.send_record_reply_uid \n} else {\n    msg.result = \"Insert Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2940,"y":1480,"wires":[["8c607501.4d3428","4747ff14.c6116"]]},{"id":"1b98e500.d82d4b","type":"function","z":"8f6ffea1.82b41","name":"Convert Update SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\nmsg.payload.create_time = convert_datetime(msg.payload.create_time)\nmsg.payload.update_time = convert_datetime(msg.payload.update_time)\nmsg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2250,"y":1680,"wires":[["d9d0ff81.02d088","c4585be5.87139"]]},{"id":"d9d0ff81.02d088","type":"debug","z":"8f6ffea1.82b41","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2560,"y":1580,"wires":[]},{"id":"3e0fbcd6.a8fd44","type":"debug","z":"8f6ffea1.82b41","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3410,"y":1620,"wires":[]},{"id":"134536e8.0afa29","type":"switch","z":"8f6ffea1.82b41","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3160,"y":1680,"wires":[["3e0fbcd6.a8fd44","605731c3.0c46e"],[]]},{"id":"6f5a4de.cbbfe34","type":"debug","z":"8f6ffea1.82b41","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":2900,"y":1580,"wires":[]},{"id":"605731c3.0c46e","type":"nats-streaming-acknowledge","z":"8f6ffea1.82b41","name":"STAN ACK","x":3390,"y":1680,"wires":[]},{"id":"8a5d593.0b395a8","type":"function","z":"8f6ffea1.82b41","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Update Report DB MsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Update Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2900,"y":1680,"wires":[["134536e8.0afa29","999cc762.0a521"]]},{"id":"882a2a75.b237","type":"function","z":"8f6ffea1.82b41","name":"Convert Delete SendRecordReply Payload","func":"Number.prototype.zeroPad = Number.prototype.zeroPad || \n     function(base){\n       var nr = this, len = (String(base).length - String(nr).length)+1;\n       return len > 0? new Array(len).join('0')+nr : nr;\n};\n\n\nfunction convert_datetime(value) {\n    \n  if (value == null) { return null }\n    \n  t1 = new Date(value)\n  year = t1.getFullYear().zeroPad(1000).toString()\n  month = (t1.getMonth() + 1).zeroPad(10).toString()\n  day = t1.getDate().zeroPad(10).toString()\n  hour = t1.getHours().zeroPad(10).toString()\n  minute = t1.getMinutes().zeroPad(10).toString()\n  second = t1.getSeconds().zeroPad(10).toString()\n  NewSendTime = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second\n  return NewSendTime\n} \n\nfunction convert_uuid(value) {\n    \n  if (value == null) { return null }\n\n  let source = value;\n  let raw = new Buffer.alloc(16, source, 'base64');\n\n  let p1 = raw.subarray(0, 4);\n  let p2 = raw.subarray(4, 6);\n  let p3 = raw.subarray(6, 8);\n  let p4 = raw.subarray(8, 10);\n  let p5 = raw.subarray(10);\n\n  let uuidArr = [\n  p1.swap32().toString('hex'),\n  p2.swap16().toString('hex'),\n  p3.swap16().toString('hex'),\n  p4.toString('hex'),\n  p5.toString('hex')\n  ];\n  \n  return uuidArr.join('-');\n\n}\n\nmsg.payload = msg.payload.payload;\n\nmsg.payload.uid= convert_uuid(msg.payload.uid)\n\n// msg.payload.create_time = convert_datetime(msg.payload.create_time)\n// msg.payload.update_time = convert_datetime(msg.payload.update_time)\n// msg.payload.reply_time = convert_datetime(msg.payload.reply_time)\n\nmsg.send_record_reply_uid = msg.payload.uid\nmsg.payload2 = msg.payload\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2250,"y":1880,"wires":[["3776ef63.d657d","e7d7f2dd.38ad18"]]},{"id":"3776ef63.d657d","type":"debug","z":"8f6ffea1.82b41","name":"Debug Send Record Reply Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload2","targetType":"msg","statusVal":"","statusType":"auto","x":2560,"y":1780,"wires":[]},{"id":"73f7815c.ccb75","type":"debug","z":"8f6ffea1.82b41","name":"Log Result","active":true,"tosidebar":true,"console":true,"tostatus":false,"complete":"result","targetType":"msg","statusVal":"","statusType":"auto","x":3450,"y":1820,"wires":[]},{"id":"a963c27f.703d2","type":"switch","z":"8f6ffea1.82b41","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3200,"y":1880,"wires":[["73f7815c.ccb75","64d763cc.115d34"],[]]},{"id":"c3c4f7ed.21bea8","type":"debug","z":"8f6ffea1.82b41","name":"Debug MSSQL Error","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"error","targetType":"msg","statusVal":"","statusType":"auto","x":2880,"y":1780,"wires":[]},{"id":"64d763cc.115d34","type":"nats-streaming-acknowledge","z":"8f6ffea1.82b41","name":"STAN ACK","x":3430,"y":1880,"wires":[]},{"id":"b309e807.0402c8","type":"function","z":"8f6ffea1.82b41","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  {\n    msg.result = \"[Gravity][Atomic]Delete Report DB MsgMo for Success, UID:\" + msg.send_record_reply_table_uid \n} else {\n    msg.result = \"[Gravity][Atomic]Delete Report DB MsgMo failure, MSG: \" + msg.error\n    msg.have_error = 1\n    \n}\n\nmsg.payload = {\n    \"code\": msg.have_error,\n    \"msg\": msg.result\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2900,"y":1900,"wires":[["a963c27f.703d2","ccd75374.833508"]]},{"id":"b46f54ad.ceba5","type":"redis-out","z":"8f6ffea1.82b41","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3340,"y":20,"wires":[]},{"id":"6a8afaf.60e7804","type":"redis-out","z":"8f6ffea1.82b41","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3400,"y":540,"wires":[]},{"id":"14fc88c6.124157","type":"redis-out","z":"8f6ffea1.82b41","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3460,"y":900,"wires":[]},{"id":"4747ff14.c6116","type":"redis-out","z":"8f6ffea1.82b41","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3200,"y":1380,"wires":[]},{"id":"999cc762.0a521","type":"redis-out","z":"8f6ffea1.82b41","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3180,"y":1620,"wires":[]},{"id":"ccd75374.833508","type":"redis-out","z":"8f6ffea1.82b41","d":true,"server":"9610aff8.a70458","command":"publish","name":"","topic":"gravity_kernel_report","obj":true,"x":3160,"y":1780,"wires":[]},{"id":"fbd14b3f.e61928","type":"switch","z":"8f6ffea1.82b41","name":"Check Payload Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordProductCreate","vt":"str"},{"t":"eq","v":"SendRecordProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":1800,"y":620,"wires":[["4cbc7f9f.fad"],["4cbc7f9f.fad"],["c3113657.36c62"],["46ff3dfa.025a9c"],["4cbc7f9f.fad"],["5526adf3.3c4dd4"]]},{"id":"ae1ca5b2.9e7da8","type":"switch","z":"8f6ffea1.82b41","name":"Check Created Event ","property":"payload.event","propertyType":"msg","rules":[{"t":"eq","v":"SendRecordReplyProductInitialize","vt":"str"},{"t":"eq","v":"SendRecordReplyProductCreate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductUpdate","vt":"str"},{"t":"eq","v":"SendRecordReplyProductDelete","vt":"str"},{"t":"eq","v":"snapshot","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":6,"x":1720,"y":1680,"wires":[["889a1d78.73263"],["889a1d78.73263"],["1b98e500.d82d4b"],["882a2a75.b237"],["889a1d78.73263"],["db94d82f.00a92"]]},{"id":"eb967c49.da3df","type":"debug","z":"8f6ffea1.82b41","name":"Display Payload","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1600,"y":500,"wires":[]},{"id":"e7d7f2dd.38ad18","type":"MSSQL","z":"8f6ffea1.82b41","mssqlCN":"41a41ac2.5ea2ac","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"delete from [dbo].[MsgMo] where UID=@uid","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2560,"y":1900,"wires":[["b309e807.0402c8"]]},{"id":"5526adf3.3c4dd4","type":"nats-streaming-acknowledge","z":"8f6ffea1.82b41","name":"STAN ACK","x":2170,"y":760,"wires":[]},{"id":"db94d82f.00a92","type":"nats-streaming-acknowledge","z":"8f6ffea1.82b41","name":"","x":2040,"y":1960,"wires":[]},{"id":"858e0114.8fc828","type":"debug","z":"8f6ffea1.82b41","name":"Display Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1620,"y":1500,"wires":[]},{"id":"3dddda4.03512a6","type":"comment","z":"8f6ffea1.82b41","name":"SI_SinoPacBankMsgInfo","info":"","x":1130,"y":680,"wires":[]},{"id":"f700b5fd.863bd8","type":"comment","z":"8f6ffea1.82b41","name":"MsgMo","info":"","x":1190,"y":1720,"wires":[]},{"id":"c4585be5.87139","type":"MSSQL","z":"8f6ffea1.82b41","mssqlCN":"41a41ac2.5ea2ac","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[MsgMo] \nSET    SerialNo = @uid, \n       ReceiveTime = Replace(Replace(Replace(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120), ':', ''), '-', ''), ' ', ''), \n       MID = @MID, \n       DestNo = @DestNo,\n       MsgData = @MsgData \nWHERE  UID = @uid ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"DateTime","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2560,"y":1680,"wires":[["8a5d593.0b395a8"]]},{"id":"1100c5fe.9afaa2","type":"MSSQL","z":"8f6ffea1.82b41","mssqlCN":"a85b5725.122ae8","name":"Create SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"\n SELECT send_record.uid                                                                                                                    AS UID,\n        send_record.serial_number                                                                                                          AS SerialNum,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GUID,\n        send_record.customer_phone                                                                                                         AS MPhoneNum,\n        send_record.content                                                                                                                AS MsgData,\n        send.priority                                                                                                                      AS Priority,\n        CAST(send_record.send_time AS DATETIME)                                                                                            AS BookingTime,\n        send_record.req_department                                                                                                         AS DepID,\n        send.msg_type                                                                                                                      AS MsgType,\n        send.memo                                                                                                                          AS Memo,\n        send_record.customer_id                                                                                                            AS SenderID,\n        send_record.req_bu                                                                                                                 AS Bu,\n        send_record.req_company                                                                                                            AS Company,\n        send.req_channel                                                                                                                   AS Channel,\n        send_record.customer_reference                                                                                                     AS REFERENCE,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS GroupID,\n        substring(CONVERT(VARCHAR(36), send.create_user), 1, 20)                                                                           AS UserName,\n        ''                                                                                                                                 AS SourceType,\n        send_record.req_object_id                                                                                                          AS ObjectID,\n        CONVERT(VARCHAR(36), send_record.uid)                                                                                              AS SerialNo,\n        send_record.customer_phone                                                                                                         AS DestNo,\n        CONVERT(VARCHAR(36), send_record.req_uid)                                                                                          AS DestName,\n        send_record.req_department                                                                                                         AS DestCategory,\n        ''                                                                                                                                 AS OrderID,\n        ''                                                                                                                                 AS MID,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.actual_send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14) AS SubmitTime, \n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.send_time AS DATETIME),20),':',''),'-',''),' ',''),1,14)        AS OrderTime, \n        CAST(send_record.expire_time AS DATETIME)                                                                                          AS ExpireTime, \n        send_record.resp_code                                                                                                              AS StatusFlag,\n        ''                                                                                                                                 AS SubmitFlag,\n        ''                                                                                                                                 AS Filler,\n        substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,CAST(send_record.dr_time AS DATETIME ),20),':',''),'-',''),' ',''),1,14)         AS StatusTime, \n        send.req_batch_id                                                                                                                  AS BatchCode\n FROM   [dbo].[send_record]                                                                                                    AS send_record,\n        [dbo].[send]                                                                                                           AS send\n WHERE  send_record.uid = @uid \n AND    send_record.send_uid = send.uid\n \n ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.send_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"way_name","type":"VarChar(?)","valueType":"msg","value":"payload.way_name","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"serial_number","type":"Int","valueType":"msg","value":"payload.serial_number","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"send_time","type":"DateTime2","valueType":"msg","value":"payload.send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"expire_time","type":"DateTime2","valueType":"msg","value":"payload.expire_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_id","type":"VarChar(?)","valueType":"msg","value":"payload.customer_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_phone","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"customer_reference","type":"NVarChar(?)","valueType":"msg","value":"payload.customer_reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_group_id","type":"VarChar(?)","valueType":"msg","value":"payload.req_group_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"req_uid","type":"VarChar(?)","valueType":"msg","value":"payload.req_uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"content","type":"NVarChar(?)","valueType":"msg","value":"payload.content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"return_code","type":"VarChar(?)","valueType":"msg","value":"payload.return_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"calc_section","type":"TinyInt","valueType":"msg","value":"payload.calc_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sending_section","type":"TinyInt","valueType":"msg","value":"payload.sending_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section","type":"TinyInt","valueType":"msg","value":"payload.section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"success_section","type":"TinyInt","valueType":"msg","value":"payload.success_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"failure_section","type":"TinyInt","valueType":"msg","value":"payload.failure_section","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"section_status_list","type":"VarChar(?)","valueType":"msg","value":"payload.section_status_list","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_long","type":"TinyInt","valueType":"msg","value":"payload.is_long","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"is_international","type":"TinyInt","valueType":"msg","value":"payload.is_international","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"msg_id","type":"VarChar(?)","valueType":"msg","value":"payload.msg_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_time","type":"DateTime2","valueType":"msg","value":"payload.actual_send_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"actual_send_phone","type":"VarChar(?)","valueType":"msg","value":"payload.actual_send_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gateway_id","type":"Int","valueType":"msg","value":"payload.gateway_id","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"status","type":"Int","valueType":"msg","value":"payload.status","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"origin_resp_code","type":"VarChar(?)","valueType":"msg","value":"payload.origin_resp_code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"gwrecvat","type":"VarChar(?)","valueType":"msg","value":"payload.gwrecvat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"acceptat","type":"VarChar(?)","valueType":"msg","value":"payload.acceptat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"sendat","type":"VarChar(?)","valueType":"msg","value":"payload.sendat","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"finish_time","type":"DateTime2","valueType":"msg","value":"payload.finish_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"meta","type":"NVarChar(?)","valueType":"msg","value":"payload.meta","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"create_time","type":"DateTime2","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_time","type":"DateTime2","valueType":"msg","value":"payload.update_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"deliver_time","type":"DateTime2","valueType":"msg","value":"payload.deliver_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"canceled_time","type":"DateTime2","valueType":"msg","value":"payload.canceled_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"dr_time","type":"DateTime2","valueType":"msg","value":"payload.dr_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"update_expired_time","type":"DateTime2","valueType":"msg","value":"payload.update_expired_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2750,"y":200,"wires":[["fddfed18.0f748"]]},{"id":"3a7002ac.5b0f0e","type":"function","z":"8f6ffea1.82b41","name":"","func":"if (msg.payload.length >= 1) {\n   msg.payload = msg.payload[0]\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2990,"y":320,"wires":[["5b82784.6821208","b7904b4b.f2818"]]},{"id":"5b82784.6821208","type":"MSSQL","z":"8f6ffea1.82b41","mssqlCN":"41a41ac2.5ea2ac","name":"Create SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[SI_SinoPacBankMsgInfo]\n    (UID,\n    SerialNum,\n    GUID,\n    MPhoneNum,\n    MsgData,\n    Priority,\n    BookingTime,\n    DepID,\n    MsgType,\n    Memo,\n    SenderID,\n    Bu,\n    Company,\n    Channel,\n    Reference,\n    GroupID,\n    UserName,\n    SourceType,\n    ObjectID,\n    SerialNo,\n    DestNo,\n    DestName,\n    DestCategory,\n    OrderID,\n    MID,\n    SubmitTime,\n    OrderTime,\n    ExpireTime,\n    StatusFlag,\n    SubmitFlag,\n    Filler,\n    StatusTime,\n    BatchCode)\nVALUES(\n        @UID,\n        @SerialNum,\n        @GUID,\n        @MPhoneNum,\n        @MsgData,\n        @Priority,\n        @BookingTime,\n        @DepID,\n        @MsgType,\n        @Memo,\n        @SenderID,\n        @Bu,\n        @Company,\n        @Channel,\n        @Reference,\n        @GroupID,\n        @UserName,\n        @SourceType,\n        @ObjectID,\n        @SerialNo,\n        @DestNo,\n        @DestName,\n        @DestCategory,\n        @OrderID,\n        @MID,\n        @SubmitTime,\n        @OrderTime,\n        @ExpireTime,\n        @StatusFlag,\n        @SubmitFlag,\n        @Filler,\n        @StatusTime,\n        @BatchCode)\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.UID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNum","type":"Int","valueType":"msg","value":"payload.SerialNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GUID","type":"VarChar(?)","valueType":"msg","value":"payload.GUID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MPhoneNum","type":"VarChar(?)","valueType":"msg","value":"payload.MPhoneNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.MsgData","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Priority","type":"TinyInt","valueType":"msg","value":"payload.Priority","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BookingTime","type":"DateTime2","valueType":"msg","value":"payload.BookingTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DepID","type":"VarChar(?)","valueType":"msg","value":"payload.DepID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgType","type":"VarChar(?)","valueType":"msg","value":"payload.MsgType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Memo","type":"VarChar(?)","valueType":"msg","value":"payload.Memo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SenderID","type":"VarChar(?)","valueType":"msg","value":"payload.SenderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Bu","type":"VarChar(?)","valueType":"msg","value":"payload.Bu","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Company","type":"VarChar(?)","valueType":"msg","value":"payload.Company","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Channel","type":"VarChar(?)","valueType":"msg","value":"payload.Channel","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Reference","type":"VarChar(?)","valueType":"msg","value":"payload.Reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GroupID","type":"VarChar(?)","valueType":"msg","value":"payload.GroupID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"UserName","type":"VarChar(?)","valueType":"msg","value":"payload.UserName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SourceType","type":"VarChar(?)","valueType":"msg","value":"payload.SourceType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ObjectID","type":"VarChar(?)","valueType":"msg","value":"payload.ObjectID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.SerialNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.DestNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestName","type":"VarChar(?)","valueType":"msg","value":"payload.DestName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestCategory","type":"VarChar(?)","valueType":"msg","value":"payload.DestCategory","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderID","type":"VarChar(?)","valueType":"msg","value":"payload.OrderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.MID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitTime","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderTime","type":"VarChar(?)","valueType":"msg","value":"payload.OrderTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ExpireTime","type":"DateTime","valueType":"msg","value":"payload.ExpireTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusFlag","type":"VarChar(?)","valueType":"msg","value":"payload.StatusFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitFlag","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Filler","type":"VarChar(?)","valueType":"msg","value":"payload.Filler","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusTime","type":"VarChar(?)","valueType":"msg","value":"payload.StatusTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BatchCode","type":"VarChar(?)","valueType":"msg","value":"payload.BatchCode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3190,"y":240,"wires":[["dfb9c3.1f9f464"]]},{"id":"b7904b4b.f2818","type":"debug","z":"8f6ffea1.82b41","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":3280,"y":320,"wires":[]},{"id":"800cdb70.fa84d8","type":"MSSQL","z":"8f6ffea1.82b41","mssqlCN":"41a41ac2.5ea2ac","name":"Report MsgMo","outField":"payload","returnType":0,"throwErrors":"0","query":"INSERT INTO [dbo].[MsgMo] \n           (\n             SerialNo, \n             ReceiveTime, \n             MID, \n             DestNo, \n             MsgData) \n             \nvalues     (@SerialNo, \n            REPLACE(REPLACE(REPLACE(CONVERT(varchar, Cast(@ReceiveTime as datetime), 120),':',''),'-',''),' ',''), \n            @MID, \n            @DestNo, \n            @MsgData) ","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ReceiveTime","type":"","valueType":"msg","value":"payload.create_time","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.code","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.customer_phone","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.reply_content","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2540,"y":1480,"wires":[["fdf63184.31d2c"]]},{"id":"4cbbc494.dbf51c","type":"MSSQL","z":"8f6ffea1.82b41","mssqlCN":"41a41ac2.5ea2ac","name":"Update SI_SinoPacBankMsgInfo","outField":"payload","returnType":0,"throwErrors":"0","query":"UPDATE [dbo].[SI_SinoPacBankMsgInfo]\nSET     SerialNum = @SerialNum,\n        MPhoneNum=@MPhoneNum ,\n        MsgData=@MsgData ,\n        Priority=@Priority,\n        BookingTime=@BookingTime ,\n        DepID=@DepID ,\n        MsgType=@MsgType,\n        Memo=@Memo ,\n        SenderID=@SenderID ,\n        Bu=@Bu ,\n        Company=@Company ,\n        Channel=@Channel ,\n        Reference=@Reference ,\n        GroupID=@GroupID ,\n        UserName=@UserName ,\n        SourceType=@SourceType ,\n        ObjectID=@ObjectID ,\n        SerialNo=@SerialNo,\n        DestNo=@DestNo ,\n        DestCategory=@DestCategory,\n        OrderID=@OrderID ,\n        MID=@MID ,\n        SubmitTime=@SubmitTime,\n        OrderTime=@OrderTime,\n        ExpireTime=@ExpireTime ,\n        StatusFlag=@StatusFlag ,\n        SubmitFlag=@SubmitFlag,\n        Filler=@Filler ,\n        StatusTime=@StatusTime,\n        BatchCode=@BatchCode\nWHERE UID=@uid\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"UID","type":"UniqueIdentifier","valueType":"msg","value":"payload.UID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNum","type":"Int","valueType":"msg","value":"payload.SerialNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GUID","type":"VarChar(?)","valueType":"msg","value":"payload.GUID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MPhoneNum","type":"VarChar(?)","valueType":"msg","value":"payload.MPhoneNum","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgData","type":"NVarChar(?)","valueType":"msg","value":"payload.MsgData","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Priority","type":"TinyInt","valueType":"msg","value":"payload.Priority","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BookingTime","type":"DateTime2","valueType":"msg","value":"payload.BookingTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DepID","type":"VarChar(?)","valueType":"msg","value":"payload.DepID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MsgType","type":"VarChar(?)","valueType":"msg","value":"payload.MsgType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Memo","type":"VarChar(?)","valueType":"msg","value":"payload.Memo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SenderID","type":"VarChar(?)","valueType":"msg","value":"payload.SenderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Bu","type":"VarChar(?)","valueType":"msg","value":"payload.Bu","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Company","type":"VarChar(?)","valueType":"msg","value":"payload.Company","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Channel","type":"VarChar(?)","valueType":"msg","value":"payload.Channel","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Reference","type":"VarChar(?)","valueType":"msg","value":"payload.Reference","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"GroupID","type":"VarChar(?)","valueType":"msg","value":"payload.GroupID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"UserName","type":"VarChar(?)","valueType":"msg","value":"payload.UserName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SourceType","type":"VarChar(?)","valueType":"msg","value":"payload.SourceType","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ObjectID","type":"VarChar(?)","valueType":"msg","value":"payload.ObjectID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SerialNo","type":"VarChar(?)","valueType":"msg","value":"payload.SerialNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestNo","type":"VarChar(?)","valueType":"msg","value":"payload.DestNo","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestName","type":"VarChar(?)","valueType":"msg","value":"payload.DestName","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"DestCategory","type":"VarChar(?)","valueType":"msg","value":"payload.DestCategory","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderID","type":"VarChar(?)","valueType":"msg","value":"payload.OrderID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"MID","type":"VarChar(?)","valueType":"msg","value":"payload.MID","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitTime","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"OrderTime","type":"VarChar(?)","valueType":"msg","value":"payload.OrderTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"ExpireTime","type":"DateTime","valueType":"msg","value":"payload.ExpireTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusFlag","type":"VarChar(?)","valueType":"msg","value":"payload.StatusFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"SubmitFlag","type":"VarChar(?)","valueType":"msg","value":"payload.SubmitFlag","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"Filler","type":"VarChar(?)","valueType":"msg","value":"payload.Filler","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"StatusTime","type":"VarChar(?)","valueType":"msg","value":"payload.StatusTime","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}},{"output":false,"name":"BatchCode","type":"VarChar(?)","valueType":"msg","value":"payload.BatchCode","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":3340,"y":720,"wires":[["d38711f5.22adc"]]},{"id":"15ca77d2.b37b7","type":"function","z":"8f6ffea1.82b41","name":"","func":"if (msg.payload.length >= 1) {\n   msg.payload = msg.payload[0]\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3070,"y":720,"wires":[["4cbbc494.dbf51c"]]},{"id":"32c5acf1.727f2c","type":"debug","z":"8f6ffea1.82b41","name":"Debug Send Record Table","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":3120,"y":500,"wires":[]},{"id":"23df1f7d.72fa88","type":"nats-streaming-subscribe","z":"8f6ffea1.82b41","name":"Send Record Product","server":"81898769.b5aff8","channel":"rowData.source.SendRecordProduct","clientID":"cache2-0001","start":"all","start_option":"","durable":true,"durable_name":"cache2-0001","queue_group":"","queue_group_name":"","autoacknowledge":false,"ackwait":"30","rate_limit":true,"max_in_flight":"1","x":1100,"y":620,"wires":[["fdde678b.ea4038"]]},{"id":"7c41acc8.22bd14","type":"MSSQL","z":"8f6ffea1.82b41","mssqlCN":"a85b5725.122ae8","name":"Update Report SI_SinoPacBankMsgInfo","outField":"payload","returnType":"0","throwErrors":"0","query":"SELECT send_record.uid as UID ,\n    send_record.serial_number as SerialNum ,\n    convert(varchar(36), send_record.req_uid) as GUID,\n    send_record.customer_phone as MPhoneNum,\n    send_record.content as MsgData ,\n    send.priority as Priority,\n    send_record.send_time as BookingTime,\n    send_record.req_department as DepID,\n    send.msg_type as MsgType,\n    send.memo as Memo,\n    send_record.customer_id as SenderID,\n    send_record.req_bu as Bu,\n    send_record.req_company as Company,\n    send.req_channel as Channel,\n    send_record.customer_reference Reference,\n    convert(varchar(36), send_record.req_uid) as GroupID,\n    Substring(convert(varchar(36), send.create_user), 1, 20) as UserName ,\n    '' as SourceType ,\n    send_record.req_object_id as ObjectID,\n    convert(varchar(36), send_record.uid) as  SerialNo ,\n    send_record.customer_phone as DestNo,\n    convert(varchar(36), send_record.req_uid) as DestName,\n    send_record.req_department as DestCategory,\n    '' as OrderID,\n    '' as MID,\n    substring(REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR,cast(send_record.actual_send_time as datetime),20),':',''),'-',''),' ',''),1,14) as SubmitTime,\n    substring(replace(replace(replace(convert(varchar,cast(send_record.send_time as datetime),20),':',''),'-',''),' ',''),1,14) as OrderTime,\n    cast(send_record.expire_time as datetime) as ExpireTime,\n    send_record.resp_code as StatusFlag,\n    '' as SubmitFlag,\n    '' as Filler,\n    substring(replace(replace(replace(convert(varchar,cast(send_record.dr_time as datetime),20),':',''),'-',''),' ',''),1,14) as StatusTime,\n    send.req_batch_id as BatchCode\nFROM [NBPKernel].[dbo].[send_record] as send_record,\n    [NBPKernel].[dbo].[send] as send\nWHERE  send_record.uid = @uid\n    AND send_record.send_uid = send.uid\n\n","modeOpt":"","modeOptType":"query","queryOpt":"","queryOptType":"editor","paramsOpt":"","paramsOptType":"editor","rows":"rows","rowsType":"msg","params":[{"output":false,"name":"uid","type":"UniqueIdentifier","valueType":"msg","value":"payload.uid","options":{"nullable":true,"primary":false,"identity":false,"readOnly":false}}],"x":2820,"y":620,"wires":[["32c5acf1.727f2c","7c47a78f.eff33"]]},{"id":"fddfed18.0f748","type":"function","z":"8f6ffea1.82b41","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  { \n    \n}\n\nelse {\n    msg.have_error = 1\n}\n    \n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2900,"y":400,"wires":[["cf4304c7.fa3ee"]]},{"id":"cf4304c7.fa3ee","type":"switch","z":"8f6ffea1.82b41","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3160,"y":400,"wires":[["3a7002ac.5b0f0e"],[]]},{"id":"7c47a78f.eff33","type":"function","z":"8f6ffea1.82b41","name":"Log Result  Information","func":"\nmsg.have_error = 0\n    \nif ( (typeof msg.error == 'undefined') || (msg.error == null) )  { \n    \n}\n\nelse {\n    msg.have_error = 1\n}\n    \n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2960,"y":800,"wires":[["adda81d2.e14d2"]]},{"id":"adda81d2.e14d2","type":"switch","z":"8f6ffea1.82b41","name":"Check DB Error","property":"have_error","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":3220,"y":800,"wires":[["15ca77d2.b37b7"],[]]}]